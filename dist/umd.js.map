{"version":3,"sources":["../src/main.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAaA;;;;;;;;;;;;;;AAcC,SAAQ,GAAI,SAAS,QAAQ;;;4BAAiB;OAAhB,OAAO;OAAE,KAAK;;;AAC3C,OAAG,CAAC,OAAO,IAAI,CAAC,OAAO,CAAC,UAAU,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE;AAAE,WAAO,IAAI,CAAA;IAAC,CAAC;AAC/D,OAAA,OAAO,IAAK,OAAO,CAAC,OAAO,CAAC,KAAK,CAAC,AAAE;WAAG,OAAO;;SAAc,OAAO,CAAC,UAAU;UAAE,KAAK;;;IAAG;GAChG;EAAA,CAAC;;;;;;AAMF,EAAE,YAAM;AACP,MAAI,CAAC,MAAM,CAAC,OAAO,CAAC,SAAS,CAAC,OAAO,EAAE;AACtC,SAAM,CAAC,OAAO,CAAC,SAAS,CAAC,OAAO,GAC/B,MAAM,CAAC,OAAO,CAAC,SAAS,CAAC,eAAe,IACxC,MAAM,CAAC,OAAO,CAAC,SAAS,CAAC,kBAAkB,IAC3C,MAAM,CAAC,OAAO,CAAC,SAAS,CAAC,iBAAiB,IAC1C,MAAM,CAAC,OAAO,CAAC,SAAS,CAAC,gBAAgB,IACzC,MAAM,CAAC,OAAO,CAAC,SAAS,CAAC,qBAAqB,IAC9C,UAAS,CAAC,EAAE;AACX,QAAI,OAAO,GAAG,CAAC,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,aAAa,CAAA,CAAE,gBAAgB,CAAC,CAAC,CAAC;QACtE,CAAC,GAAG,OAAO,CAAC,MAAM,CAAC;AACpB,WAAO,EAAE,CAAC,IAAI,CAAC,IAAI,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,IAAI,EAAE,EAAE;AAC/C,WAAO,CAAC,GAAG,CAAC,CAAC,CAAC;IACd,CAAC;GACH;EACD,CAAA,EAAG,CAAA;;SAWQ,OAAO,GAAnB,QAAQ","file":"umd.js","sourcesContent":["/**\n * @module es6-DOM-closest\n * @description Returns the first element that matches the selector\n * by testing the element itself and traversing up through its ancestors in the DOM tree.\n * A replacement for jQuery's .closest().\n *\n * @author martin krause - info@mkrause.info\n * @version 1.0.1\n * @copyright martin krause - info@mkrause.info\n *\n */\n/*!es6-DOM-closest|mkrause.info|BSD-3-Clause*/\n\nconst\n\n\t/**\n\t * Ensure we have Element.matches()\n\t * @return {Void}\n\t */\n\n\t/**\n\t * Tests if an element matches the selector, walks up the DOM-tree\n\t * until it's find a match for the selector.\n\t * @param  {DOM-Node} element  the element to test\n\t * @param  {String} selector selector to match the element against\n\t * @return {DOM-Node}\n\t */\n\t_closest =  function _closest(element, query) {\n\t\tif(!element || !element.parentNode || !element.matches) { return null};\n\t\treturn( element && (element.matches(query) ) ? element : ( _closest(element.parentNode, query) ));\n\t};\n\n\t/**\n\t * Polyfill for Element.matches\n\t * @return {Void}\n\t */\n\t( () => {\n\t\tif (!window.Element.prototype.matches) {\n\t\t\twindow.Element.prototype.matches =\n\t\t\t\twindow.Element.prototype.matchesSelector ||\n\t\t\t\twindow.Element.prototype.mozMatchesSelector ||\n\t\t\t\twindow.Element.prototype.msMatchesSelector ||\n\t\t\t\twindow.Element.prototype.oMatchesSelector ||\n\t\t\t\twindow.Element.prototype.webkitMatchesSelector ||\n\t\t\t\tfunction(s) {\n\t\t\t\t\tvar matches = (this.document || this.ownerDocument).querySelectorAll(s),\n\t\t\t\t\t\ti = matches.length;\n\t\t\t\t\twhile (--i >= 0 && matches.item(i) !== this) {}\n\t\t\t\t\treturn i > -1;\n\t\t\t\t};\n\t\t}\n\t})()\n\nexport {\n\n\t/**\n\t * Tests if an element matches the selector, walks up the DOM-tree\n\t * until it's find a match for the selector.\n\t * @param  {DOM-Node} element  the element to test\n\t * @param  {String} selector selector to match the element against\n\t * @return {DOM-Node}\n\t */\n\t_closest as closest\n\n};\n\n\n\n\n\n"]}